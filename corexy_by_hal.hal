# show original signals for joints 0,1
show sig emcmot.0.pos-cmd emcmot.1.pos-cmd
show sig motor.0.pos-fb  motor.1.pos-fb

# remove original signals that connect
# pins for stepgens 0,1:
delsig emcmot.0.pos-cmd
delsig emcmot.1.pos-cmd
delsig motor.0.command
delsig motor.1.command
delsig motor.0.pos-fb
delsig motor.1.pos-fb

# implement corexy kinematics with hal component:
loadrt corexy_by_hal names=corexy_by_hal
addf   corexy_by_hal servo-thread

net :j0motor-cmd <= joint.0.motor-pos-cmd
net :j0motor-cmd => corexy_by_hal.j0-motor-pos-cmd

net :j1motor-cmd <= joint.1.motor-pos-cmd
net :j1motor-cmd => corexy_by_hal.j1-motor-pos-cmd

net :j0motor-fb <= corexy_by_hal.j0-motor-pos-fb
net :j0motor-fb => joint.0.motor-pos-fb

net :j1motor-fb <= corexy_by_hal.j1-motor-pos-fb
net :j1motor-fb => joint.1.motor-pos-fb

# new signals connecting pins for stepgens 0,1:
net :alpha-cmd <= corexy_by_hal.alpha-cmd
net :alpha-cmd => pid.0.command
net alpha-cmd-m pid.0.output hm2_[HOSTMOT2](BOARD).0.stepgen.00.velocity-cmd

net :beta-cmd => corexy_by_hal.beta-cmd
net :beta-cmd <= pid.1.command
net beta-cmd-m pid.1.output hm2_[HOSTMOT2](BOARD).0.stepgen.01.velocity-cmd

net :alpha-fb  <= hm2_[HOSTMOT2](BOARD).0.stepgen.00.position-fb
net :alpha-fb  => pid.0.feedback
net :alpha-fb  => corexy_by_hal.alpha-fb

net :beta-fb  <= hm2_[HOSTMOT2](BOARD).0.stepgen.01.position-fb
net :beta-fb  => pid.1.feedback
net :beta-fb  => corexy_by_hal.beta-fb

# show new signals:
show sig :*alpha*
show sig :*beta*